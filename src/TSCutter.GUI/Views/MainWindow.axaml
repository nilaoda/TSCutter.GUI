<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:TSCutter.GUI.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:TSCutter.GUI.Controls"
        xmlns:converters="clr-namespace:TSCutter.GUI.Converters"
        xmlns:local="clr-namespace:TSCutter.GUI"
        xmlns:ui="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
        mc:Ignorable="d"
        Width="880" Height="670"
        MinWidth="600"
        x:Class="TSCutter.GUI.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        x:Name="CutterMainWindow"
        Closing="Window_OnClosing"
        Icon="/Assets/logo.ico"
        DataContext="{x:Static local:App.MainWindow}"
        WindowStartupLocation="CenterScreen"
        Title="{Binding WindowTitle}">

    <Window.Resources>
        <converters:ClipToBrushConverter x:Key="ClipToBrushConverter" />
        <converters:SecondsToStringConverter x:Key="SecondsConverter" />
    </Window.Resources>
    
    <Interaction.Behaviors>
        <EventTriggerBehavior EventName="Loaded">
            <InvokeCommandAction Command="{Binding ProcessCommandLineCommand}" />
        </EventTriggerBehavior>
    </Interaction.Behaviors>

    <Window.Styles>
        <Style Selector="ToolTip">
            <Setter Property="FontWeight" Value="Normal" />
        </Style>
        <Style Selector="TextBlock.MonoFont">
            <Setter Property="FontFamily" Value="Consolas, Monaco, monospace" />
        </Style>
        <Style Selector="Button.hyperlink">
            <Setter Property="Template">
                <ControlTemplate>
                    <TextBlock TextTrimming="CharacterEllipsis" Text="{TemplateBinding Content}" Classes="MonoFont">
                    <TextBlock.Styles>
                        <Style Selector="TextBlock:pointerover">
                            <Setter Property="Foreground" Value="{StaticResource SystemAccentColorLight1}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Style>
                    </TextBlock.Styles>
                    </TextBlock>
                </ControlTemplate>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
    </Window.Styles>
    
    <!-- Don't know why NativeMenuItem's Gesture only works on macOS, so here add KeyBindings -->
    <Window.KeyBindings>
        <KeyBinding Gesture="{OnPlatform Ctrl+O, macOS=⌘+O}" Command="{Binding LoadVideoClickCommand}"/>
        <KeyBinding Gesture="{OnPlatform Ctrl+S, macOS=⌘+S}" Command="{Binding SaveVideoClickCommand}"/>
    </Window.KeyBindings>

    <NativeMenu.Menu>
        <NativeMenu>
            <NativeMenuItem Header="_File">
                <NativeMenu>
                    <NativeMenuItem Header="_Open Video..."
                                    Command="{Binding LoadVideoClickCommand}"
                                    Gesture="{OnPlatform Ctrl+O, macOS=⌘+O}" />
                    <NativeMenuItem Header="_Save Clip..."
                                    Command="{Binding SaveVideoClickCommand}"
                                    Gesture="{OnPlatform Ctrl+S, macOS=⌘+S}" />
                    <NativeMenuItemSeparator />
                    <NativeMenuItem Header="_Close Video"
                                    Command="{Binding CloseVideoClickCommand}"/>
                    <NativeMenuItem Header="_Exit" 
                                    Command="{Binding ExitApplicationCommand}"/>
                </NativeMenu>
            </NativeMenuItem>
            <NativeMenuItem Header="_Help">
                <NativeMenu>
                    <NativeMenuItem Header="_About..."
                                    Command="{Binding ShowAboutDialogCommand}"/>
                </NativeMenu>
            </NativeMenuItem>
        </NativeMenu>
    </NativeMenu.Menu>

    <Grid DragDrop.AllowDrop="True">
        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.ThemeDictionaries>
                    <ResourceDictionary x:Key="Light">
                        <SolidColorBrush x:Key="MaskBackgroundBrush">White</SolidColorBrush>
                    </ResourceDictionary>
                    <ResourceDictionary x:Key="Dark">
                        <SolidColorBrush x:Key="MaskBackgroundBrush">Black</SolidColorBrush>
                    </ResourceDictionary>
                </ResourceDictionary.ThemeDictionaries>
            </ResourceDictionary>
        </Grid.Resources>    
        <Interaction.Behaviors>
            <RoutedEventTriggerBehavior RoutedEvent="{x:Static DragDrop.DragEnterEvent}">
                <ChangePropertyAction TargetObject="{Binding ElementName=DropMask}" PropertyName="IsVisible" Value="True" />
            </RoutedEventTriggerBehavior>
            <RoutedEventTriggerBehavior RoutedEvent="{x:Static DragDrop.DragLeaveEvent}">
                <ChangePropertyAction TargetObject="{Binding ElementName=DropMask}" PropertyName="IsVisible" Value="False" />
            </RoutedEventTriggerBehavior>
        </Interaction.Behaviors>
        <Grid ZIndex="2"
              IsVisible="False"
              DragDrop.AllowDrop="True"
              x:Name="DropMask">
              <Interaction.Behaviors>
                  <RoutedEventTriggerBehavior RoutedEvent="{x:Static DragDrop.DropEvent}">
                      <InvokeCommandAction Command="{Binding DropCommand}" PassEventArgsToCommand="True" />
                      <ChangePropertyAction PropertyName="IsVisible" Value="False" />
                  </RoutedEventTriggerBehavior>
                  <RoutedEventTriggerBehavior RoutedEvent="{x:Static DragDrop.DragOverEvent}">
                      <InvokeCommandAction Command="{Binding DragOverCommand}" PassEventArgsToCommand="True" />
                  </RoutedEventTriggerBehavior>
              </Interaction.Behaviors>
            <Border Background="{DynamicResource MaskBackgroundBrush}" Opacity="0.9" />
            <TextBlock Text="Drop to load video" VerticalAlignment="Center" HorizontalAlignment="Center" />
            <Rectangle Stroke="Gray" StrokeThickness="2" StrokeDashArray="3, 4" Width="200" Height="100" RadiusX="10" RadiusY="10"/>
        </Grid>
        <DockPanel>
            <Grid DockPanel.Dock="Top"
                Margin="6"
                ColumnDefinitions="Auto" 
                Background="Transparent">
                <Grid.IsVisible>
                    <OnPlatform Default="False">
                        <On Options="Windows, Linux" Content="True" />
                    </OnPlatform>
                </Grid.IsVisible>
                <TextBlock Text="{Binding Title, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                        IsHitTestVisible="False"
                        VerticalAlignment="Center"
                        Grid.Column="0">
                </TextBlock>
            </Grid>
            <StackPanel DockPanel.Dock="Bottom"
                        Orientation="Horizontal"
                        VerticalAlignment="Center">
                    <TextBlock Margin="4,0,0,0"
                               Classes="MonoFont"
                               FontSize="12"
                               VerticalAlignment="Center"
                               Text="{Binding StatusInfoText}">
                    </TextBlock>
                    <Button Command="{Binding OpenFileInExplorerCommand}"
                            FontSize="12"
                            Classes="hyperlink"
                            ToolTip.Tip="Find File"
                            Content="{Binding VideoPath}"/>
            </StackPanel>
            <Grid RowDefinitions="Auto, 40, *">
                <Grid Grid.Row="0" ColumnDefinitions="*, Auto, Auto" VerticalAlignment="Center">
                    <Grid.IsVisible>
                        <OnPlatform Default="False">
                            <On Options="Windows, Linux" Content="True" />
                        </OnPlatform>
                    </Grid.IsVisible>
                    <NativeMenuBar Grid.Column="0" />
                    <Button Grid.Column="1"
                            ToolTip.Tip="Toggle Theme"
                            Command="{Binding ToggleThemeClickCommand}"
                            Theme="{StaticResource TransparentButton}"
                            Padding="8 4">
                        <PathIcon Height="18" Data="{StaticResource swap_theme_icon}" />
                    </Button>
                    <Button Grid.Column="2"
                            ToolTip.Tip="Settings"
                            Command="{Binding SettingsClickCommand}"
                            Margin="0,0,5,0"
                            Theme="{StaticResource TransparentButton}"
                            HorizontalAlignment="Right">
                        <ui:SymbolIcon Symbol="Settings" FontSize="18" />
                    </Button>
                </Grid>
                <Grid Grid.Row="1" ColumnDefinitions="*, Auto, Auto">
                    <StackPanel Grid.Column="0"
                                Orientation="Horizontal"
                                VerticalAlignment="Center"
                                Margin="4"
                                Spacing="2">
                        <StackPanel.Styles>
                            <Style Selector="Button">
                                <Setter Property="Padding" Value="6,4" />
                            </Style>
                            <Style Selector="ui|SymbolIcon">
                                <Setter Property="FontSize" Value="18" />
                            </Style>
                        </StackPanel.Styles>
                        <Button ToolTip.Tip="Open Video..."
                                Command="{Binding LoadVideoClickCommand}">
                            <ui:SymbolIcon Symbol="OpenFile"/>
                        </Button>
                        <Button ToolTip.Tip="Zoom In"
                                Command="{Binding ZoomInCommand}">
                            <ui:SymbolIcon Symbol="ZoomIn"/>
                        </Button>
                        <Button ToolTip.Tip="Zoom Out"
                                Command="{Binding ZoomOutCommand}">
                            <ui:SymbolIcon Symbol="ZoomOut"/>
                        </Button>
                        <Button ToolTip.Tip="1:1"
                                Command="{Binding ZoomNoneCommand}">
                            <ui:SymbolIcon Symbol="FullScreenMinimize"/>
                        </Button>
                        <Button ToolTip.Tip="Fit"
                                Command="{Binding FitCommand, ElementName=ImageViewer}">
                            <ui:SymbolIcon Symbol="FullScreenMaximize"/>
                        </Button>
                        <Button ToolTip.Tip="Save Frame"
                                Command="{Binding SaveFrameClickCommand}">
                            <ui:SymbolIcon Symbol="Image"/>
                        </Button>
                        <TextBlock VerticalAlignment="Center"
                                Text="{Binding ZoomFactorStr}" />
                    </StackPanel>
                    <Button Grid.Column="1"
                            ToolTip.Tip="Toggle Theme"
                            Command="{Binding ToggleThemeClickCommand}"
                            Theme="{StaticResource TransparentButton}"
                            Padding="8 4">
                        <Button.IsVisible>
                            <OnPlatform Default="True">
                                <On Options="Windows, Linux" Content="False" />
                            </OnPlatform>
                        </Button.IsVisible>
                        <PathIcon Height="18" Data="{StaticResource swap_theme_icon}" />
                    </Button>
                    <Button Grid.Column="2"
                            ToolTip.Tip="Settings"
                            Command="{Binding SettingsClickCommand}"
                            Margin="0,0,5,0"
                            Theme="{StaticResource TransparentButton}"
                            HorizontalAlignment="Right">
                        <Button.IsVisible>
                            <OnPlatform Default="True">
                                <On Options="Windows, Linux" Content="False" />
                            </OnPlatform>
                        </Button.IsVisible>
                        <ui:SymbolIcon Symbol="Settings" FontSize="18" />
                    </Button>
                </Grid>
                <Grid Grid.Row="2" RowDefinitions="*, Auto, 150">
                    <Grid Grid.Row="0" RowDefinitions="*, Auto, Auto, Auto">
                        <controls:ImageViewer Name="ImageViewer"
                                              MaxZoomFactor="{Binding MaxZoomFactor}"
                                              MinZoomFactor="{Binding MinZoomFactor}"
                                              OffsetX="{Binding OffsetX, Mode=TwoWay}"
                                              OffsetY="{Binding OffsetY, Mode=TwoWay}"
                                              Image="{Binding DecodedBitmap}"
                                              Zoom="{Binding ZoomFactor, Mode=TwoWay}">
                        </controls:ImageViewer>
                        <controls:CustomSlider Grid.Row="1"
                                            Name="CustomSlider"
                                            Margin="0, 2"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Center"
                                            Minimum="0"
                                            Maximum="{Binding DurationMax}"
                                            Value="{Binding CurrentTime, Mode=TwoWay}"
                                            ValueChangedAfterMouseUp="CustomSlider_OnValueChangedAfterMouseUp">
                            <controls:CustomSlider.Styles>
                                <Style Selector="Thumb:pointerover /template/ Ellipse#SliderInnerThumb">
                                    <Setter Property="RenderTransform" Value="scaleX(0.86) scaleY(0.86)" />
                                </Style>
                            </controls:CustomSlider.Styles>
                            <controls:CustomSlider.Resources>
                                <ResourceDictionary>
                                    <!-- Reference to shared resources -->
                                    <ResourceDictionary.MergedDictionaries>
                                        <MergeResourceInclude Source="avares://TSCutterGUI/Controls/CustomSliderResources.axaml"/>
                                    </ResourceDictionary.MergedDictionaries>
                                </ResourceDictionary>
                            </controls:CustomSlider.Resources>
                        </controls:CustomSlider>
                        <Rectangle Grid.Row="2"
                                Height="5">
                            <Rectangle.Fill>
                                <MultiBinding Converter="{StaticResource ClipToBrushConverter}">
                                    <Binding Path="DurationMax" />
                                    <Binding Path="SelectedClip.StartTime" FallbackValue="null" />
                                    <Binding Path="SelectedClip.EndTime" FallbackValue="null" />
                                </MultiBinding>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Grid Grid.Row="3" ColumnDefinitions="*, Auto, *">
                            <Grid.Styles>
                                <Style Selector="TextBlock.LeftBtn">
                                    <Setter Property="FontSize" Value="14" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                                <Style Selector="Button.CenterBtn">
                                    <Setter Property="Padding" Value="4,6" />
                                </Style>
                                <Style Selector="Button">
                                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                </Style>
                            </Grid.Styles>
                            <StackPanel Grid.Column="0" Orientation="Horizontal" Spacing="4" Margin="4, 4">
                                <Button Command="{Binding MarkClipStartCommand}"
                                        ToolTip.Tip="Mark Start">
                                    <TextBlock Classes="LeftBtn MonoFont">[</TextBlock>
                                </Button>
                                <Button Command="{Binding MarkClipEndCommand}"
                                        ToolTip.Tip="Mark End">
                                    <TextBlock Classes="LeftBtn MonoFont">]</TextBlock>
                                </Button>
                                <Button Command="{Binding AddClipCommand}"
                                        ToolTip.Tip="Add Clip">
                                    <TextBlock Classes="LeftBtn MonoFont">+</TextBlock>
                                </Button>
                                <Button Command="{Binding RemoveClipCommand}"
                                        ToolTip.Tip="Remove Clip">
                                    <TextBlock Classes="LeftBtn MonoFont">-</TextBlock>
                                </Button>
                            </StackPanel>
                            <StackPanel Grid.Column="1" HorizontalAlignment="Center" Orientation="Horizontal" Spacing="4"
                                        Margin="4, 4">
                                <!-- LEFT -->
                                <Button Command="{Binding Prev10GopClickCommand}"
                                        Classes="CenterBtn"
                                        ToolTip.Tip="Previous 10">
                                    <PathIcon Height="12" Data="{StaticResource fast_forward_regular}">
                                        <PathIcon.RenderTransform>
                                            <ScaleTransform ScaleX="-1" />
                                        </PathIcon.RenderTransform>
                                    </PathIcon>
                                </Button>
                                <Button Command="{Binding PrevGopClickCommand}"
                                        Classes="CenterBtn"
                                        ToolTip.Tip="Previous">
                                    <PathIcon Height="12" Data="{StaticResource caret_left_regular}" />
                                </Button>
                                <!-- CENTER -->
                                <Button Content="{Binding CurrentTime, Converter={StaticResource SecondsConverter}}" 
                                        Command="{Binding JumpToClickCommand}"
                                        ToolTip.Tip="Jump to..."
                                        VerticalAlignment="Center"
                                        FontWeight="Bold"
                                        FontSize="22"
                                        Margin="4,0"
                                        Classes="hyperlink"/>
                                <!-- RIGHT -->
                                <Button Command="{Binding NextGopClickCommand}"
                                        Classes="CenterBtn"
                                        ToolTip.Tip="Next">
                                    <PathIcon Height="12" Data="{StaticResource caret_right_regular}" />
                                </Button>
                                <Button Command="{Binding Next10GopClickCommand}"
                                        Classes="CenterBtn"
                                        ToolTip.Tip="Next 10">
                                    <PathIcon Height="12" Data="{StaticResource fast_forward_regular}" />
                                </Button>
                            </StackPanel>
                            <StackPanel Grid.Column="2" HorizontalAlignment="Right" Orientation="Horizontal" Spacing="4"
                                        Margin="4, 4">
                                <Button Command="{Binding SaveVideoClickCommand}"
                                        Classes="accent"
                                        VerticalContentAlignment="Center"
                                        ToolTip.Tip="Save Current Clip">
                                    <StackPanel Orientation="Horizontal">
                                        <ui:SymbolIcon Symbol="SaveAs" FontSize="18" />
                                        <TextBlock VerticalAlignment="Center" Text="Save Clip" Margin="4,0,0,0"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <GridSplitter Grid.Row="1" />
                    <DataGrid Grid.Row="2"
                            SelectionMode="Single"
                            SelectedItem="{Binding SelectedClip}"
                            ItemsSource="{Binding Clips}"
                            IsReadOnly="True"
                            CanUserResizeColumns="True"
                            CanUserSortColumns="False"
                            AutoGenerateColumns="False">
                        <DataGrid.Styles>
                            <Style Selector="TextBlock">
                                <Setter Property="FontSize" Value="14" />
                            </Style>
                        </DataGrid.Styles>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Start Time" Width="120" Binding="{Binding StartTimeStr}" />
                            <DataGridTextColumn Header="End Time" Width="120" Binding="{Binding EndTimeStr}" />
                            <DataGridTextColumn Header="Output Size" Width="120" Binding="{Binding OutputFileSizeStr}" />
                            <DataGridTextColumn Header="Output Path" Width="*" Binding="{Binding OutputFileInfo.FullName}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Grid>
        </DockPanel>
    </Grid>
</Window>